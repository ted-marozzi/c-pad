#!/bin/bash
# This is sake
# sake is a simple build system for C projects
# sake is like make but simpler
# sake is like make but simpler

# For information on how to use sake just read the code

set -exo pipefail

function create() {
  mkdir -p scripts
  cat >./scripts/clean <<'EOM'
#!/bin/bash
set -exo pipefail

rm -rf ./bin ./main.dSYM

EOM

  cat >./scripts/build <<'EOM'
#!/bin/bash
set -exo pipefail

flags=""

for arg in "$@"; do
  case "$arg" in
  "--debug" | "-d")
    flags+="-g "
    ;;

  "--sanatize" | "-s")
    flags+="-fsanitize=address "
    ;;

  *)
    echo "invalid argument $arg"
    ;;
  esac
done

mkdir -p bin/obj

for file in ./src/*.c; do
  file_name="${file#\.\/src\/}"
  clang -c "$file" -o "./bin/obj/${file_name%.c}.o"
done

for file in ./src/*.h; do
  file_name="${file#\.\/src\/}"
  clang -c "$file" -o "./bin/obj/$file_name.gch"
done

clang ./bin/obj/*.o ./bin/obj/*.h.gch "$flags" -o ./bin/main


EOM
}

case $1 in
"clean")
  ./scripts/clean
  ;;
"build")
  ./scripts/build
  ;;
"run")
  ./scripts/run
  ;;
"create")
  create
  ;;
"")
  ./scripts/build
  ./scripts/run
  ;;
*)
  echo "invalid subcommand $1"
  ;;
esac
